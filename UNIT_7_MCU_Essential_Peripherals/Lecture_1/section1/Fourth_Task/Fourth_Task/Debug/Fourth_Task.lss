
Fourth_Task.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002e8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000033c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000033c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000036c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000003a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ad1  00000000  00000000  00000430  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006c3  00000000  00000000  00000f01  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000082a  00000000  00000000  000015c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  00001df0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c6  00000000  00000000  00001ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a1e  00000000  00000000  0000238e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002dac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 72 01 	jmp	0x2e4	; 0x2e4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
 #include <util/delay.h>

 int main(void)
 {
	 u8_t i=0,j=0,counter=0;
	 MDIO_voidSetPortDirection(PORTC,OUTPUT);
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	82 e0       	ldi	r24, 0x02	; 2
  70:	0e 94 1e 01 	call	0x23c	; 0x23c <MDIO_voidSetPortDirection>
	 
	 while (1)
	 {
		for (counter=0;counter<100;counter++)
  74:	10 e0       	ldi	r17, 0x00	; 0
  76:	68 c0       	rjmp	.+208    	; 0x148 <main+0xdc>
		{
					 for (i=0;i<10;i++)
					 {
						 for (j=0;j<10;j++)
						 {
							 MDIO_voidSetPinValue(PORTC,PIN2,HIGH);
  78:	41 e0       	ldi	r20, 0x01	; 1
  7a:	62 e0       	ldi	r22, 0x02	; 2
  7c:	82 e0       	ldi	r24, 0x02	; 2
  7e:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
							 MDIO_voidSetPinValue(PORTC,PIN3,LOW);
  82:	40 e0       	ldi	r20, 0x00	; 0
  84:	63 e0       	ldi	r22, 0x03	; 3
  86:	82 e0       	ldi	r24, 0x02	; 2
  88:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	2f ef       	ldi	r18, 0xFF	; 255
  8e:	81 ee       	ldi	r24, 0xE1	; 225
  90:	94 e0       	ldi	r25, 0x04	; 4
  92:	21 50       	subi	r18, 0x01	; 1
  94:	80 40       	sbci	r24, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <main+0x26>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x30>
  9c:	00 00       	nop
							 _delay_ms(200);

							 MDIO_voidSetPinValue(PORTC,PIN4,GET_BIT(i,0));
  9e:	4d 2f       	mov	r20, r29
  a0:	41 70       	andi	r20, 0x01	; 1
  a2:	64 e0       	ldi	r22, 0x04	; 4
  a4:	82 e0       	ldi	r24, 0x02	; 2
  a6:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
							 MDIO_voidSetPinValue(PORTC,PIN5,GET_BIT(i,1));
  aa:	d1 fb       	bst	r29, 1
  ac:	44 27       	eor	r20, r20
  ae:	40 f9       	bld	r20, 0
  b0:	65 e0       	ldi	r22, 0x05	; 5
  b2:	82 e0       	ldi	r24, 0x02	; 2
  b4:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
							 MDIO_voidSetPinValue(PORTC,PIN6,GET_BIT(i,2));
  b8:	d2 fb       	bst	r29, 2
  ba:	44 27       	eor	r20, r20
  bc:	40 f9       	bld	r20, 0
  be:	66 e0       	ldi	r22, 0x06	; 6
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
							 MDIO_voidSetPinValue(PORTC,PIN7,GET_BIT(i,3));
  c6:	d3 fb       	bst	r29, 3
  c8:	44 27       	eor	r20, r20
  ca:	40 f9       	bld	r20, 0
  cc:	67 e0       	ldi	r22, 0x07	; 7
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>

							 MDIO_voidSetPinValue(PORTC,PIN2,LOW);
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	62 e0       	ldi	r22, 0x02	; 2
  d8:	82 e0       	ldi	r24, 0x02	; 2
  da:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
							 MDIO_voidSetPinValue(PORTC,PIN3,HIGH);
  de:	41 e0       	ldi	r20, 0x01	; 1
  e0:	63 e0       	ldi	r22, 0x03	; 3
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
  e8:	2f ef       	ldi	r18, 0xFF	; 255
  ea:	81 ee       	ldi	r24, 0xE1	; 225
  ec:	94 e0       	ldi	r25, 0x04	; 4
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x82>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x8c>
  f8:	00 00       	nop
							 _delay_ms(200);
							 
							 MDIO_voidSetPinValue(PORTC,PIN4,GET_BIT(j,0));
  fa:	4c 2f       	mov	r20, r28
  fc:	41 70       	andi	r20, 0x01	; 1
  fe:	64 e0       	ldi	r22, 0x04	; 4
 100:	82 e0       	ldi	r24, 0x02	; 2
 102:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
							 MDIO_voidSetPinValue(PORTC,PIN5,GET_BIT(j,1));
 106:	c1 fb       	bst	r28, 1
 108:	44 27       	eor	r20, r20
 10a:	40 f9       	bld	r20, 0
 10c:	65 e0       	ldi	r22, 0x05	; 5
 10e:	82 e0       	ldi	r24, 0x02	; 2
 110:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
							 MDIO_voidSetPinValue(PORTC,PIN6,GET_BIT(j,2));
 114:	c2 fb       	bst	r28, 2
 116:	44 27       	eor	r20, r20
 118:	40 f9       	bld	r20, 0
 11a:	66 e0       	ldi	r22, 0x06	; 6
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
							 MDIO_voidSetPinValue(PORTC,PIN7,GET_BIT(j,3));
 122:	c3 fb       	bst	r28, 3
 124:	44 27       	eor	r20, r20
 126:	40 f9       	bld	r20, 0
 128:	67 e0       	ldi	r22, 0x07	; 7
 12a:	82 e0       	ldi	r24, 0x02	; 2
 12c:	0e 94 a7 00 	call	0x14e	; 0x14e <MDIO_voidSetPinValue>
	 {
		for (counter=0;counter<100;counter++)
		{
					 for (i=0;i<10;i++)
					 {
						 for (j=0;j<10;j++)
 130:	cf 5f       	subi	r28, 0xFF	; 255
 132:	01 c0       	rjmp	.+2      	; 0x136 <main+0xca>
 134:	c0 e0       	ldi	r28, 0x00	; 0
 136:	ca 30       	cpi	r28, 0x0A	; 10
 138:	08 f4       	brcc	.+2      	; 0x13c <main+0xd0>
 13a:	9e cf       	rjmp	.-196    	; 0x78 <main+0xc>
	 
	 while (1)
	 {
		for (counter=0;counter<100;counter++)
		{
					 for (i=0;i<10;i++)
 13c:	df 5f       	subi	r29, 0xFF	; 255
 13e:	01 c0       	rjmp	.+2      	; 0x142 <main+0xd6>
 140:	d0 e0       	ldi	r29, 0x00	; 0
 142:	da 30       	cpi	r29, 0x0A	; 10
 144:	b8 f3       	brcs	.-18     	; 0x134 <main+0xc8>
	 u8_t i=0,j=0,counter=0;
	 MDIO_voidSetPortDirection(PORTC,OUTPUT);
	 
	 while (1)
	 {
		for (counter=0;counter<100;counter++)
 146:	1f 5f       	subi	r17, 0xFF	; 255
 148:	14 36       	cpi	r17, 0x64	; 100
 14a:	d0 f3       	brcs	.-12     	; 0x140 <main+0xd4>
 14c:	93 cf       	rjmp	.-218    	; 0x74 <main+0x8>

0000014e <MDIO_voidSetPinValue>:
			break;		
		default:
			break;
	}
	return Local_u8ReturnValue ;
}
 14e:	81 30       	cpi	r24, 0x01	; 1
 150:	19 f1       	breq	.+70     	; 0x198 <MDIO_voidSetPinValue+0x4a>
 152:	30 f0       	brcs	.+12     	; 0x160 <MDIO_voidSetPinValue+0x12>
 154:	82 30       	cpi	r24, 0x02	; 2
 156:	e1 f1       	breq	.+120    	; 0x1d0 <MDIO_voidSetPinValue+0x82>
 158:	83 30       	cpi	r24, 0x03	; 3
 15a:	09 f4       	brne	.+2      	; 0x15e <MDIO_voidSetPinValue+0x10>
 15c:	54 c0       	rjmp	.+168    	; 0x206 <MDIO_voidSetPinValue+0xb8>
 15e:	08 95       	ret
 160:	44 23       	and	r20, r20
 162:	71 f0       	breq	.+28     	; 0x180 <MDIO_voidSetPinValue+0x32>
 164:	41 30       	cpi	r20, 0x01	; 1
 166:	09 f0       	breq	.+2      	; 0x16a <MDIO_voidSetPinValue+0x1c>
 168:	68 c0       	rjmp	.+208    	; 0x23a <MDIO_voidSetPinValue+0xec>
 16a:	2b b3       	in	r18, 0x1b	; 27
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <MDIO_voidSetPinValue+0x28>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	6a 95       	dec	r22
 178:	e2 f7       	brpl	.-8      	; 0x172 <MDIO_voidSetPinValue+0x24>
 17a:	82 2b       	or	r24, r18
 17c:	8b bb       	out	0x1b, r24	; 27
 17e:	08 95       	ret
 180:	2b b3       	in	r18, 0x1b	; 27
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	02 c0       	rjmp	.+4      	; 0x18c <MDIO_voidSetPinValue+0x3e>
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	6a 95       	dec	r22
 18e:	e2 f7       	brpl	.-8      	; 0x188 <MDIO_voidSetPinValue+0x3a>
 190:	80 95       	com	r24
 192:	82 23       	and	r24, r18
 194:	8b bb       	out	0x1b, r24	; 27
 196:	08 95       	ret
 198:	44 23       	and	r20, r20
 19a:	71 f0       	breq	.+28     	; 0x1b8 <MDIO_voidSetPinValue+0x6a>
 19c:	41 30       	cpi	r20, 0x01	; 1
 19e:	09 f0       	breq	.+2      	; 0x1a2 <MDIO_voidSetPinValue+0x54>
 1a0:	4c c0       	rjmp	.+152    	; 0x23a <MDIO_voidSetPinValue+0xec>
 1a2:	28 b3       	in	r18, 0x18	; 24
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <MDIO_voidSetPinValue+0x60>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <MDIO_voidSetPinValue+0x5c>
 1b2:	82 2b       	or	r24, r18
 1b4:	88 bb       	out	0x18, r24	; 24
 1b6:	08 95       	ret
 1b8:	28 b3       	in	r18, 0x18	; 24
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <MDIO_voidSetPinValue+0x76>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <MDIO_voidSetPinValue+0x72>
 1c8:	80 95       	com	r24
 1ca:	82 23       	and	r24, r18
 1cc:	88 bb       	out	0x18, r24	; 24
 1ce:	08 95       	ret
 1d0:	44 23       	and	r20, r20
 1d2:	69 f0       	breq	.+26     	; 0x1ee <MDIO_voidSetPinValue+0xa0>
 1d4:	41 30       	cpi	r20, 0x01	; 1
 1d6:	89 f5       	brne	.+98     	; 0x23a <MDIO_voidSetPinValue+0xec>
 1d8:	25 b3       	in	r18, 0x15	; 21
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <MDIO_voidSetPinValue+0x96>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	6a 95       	dec	r22
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <MDIO_voidSetPinValue+0x92>
 1e8:	82 2b       	or	r24, r18
 1ea:	85 bb       	out	0x15, r24	; 21
 1ec:	08 95       	ret
 1ee:	25 b3       	in	r18, 0x15	; 21
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <MDIO_voidSetPinValue+0xac>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <MDIO_voidSetPinValue+0xa8>
 1fe:	80 95       	com	r24
 200:	82 23       	and	r24, r18
 202:	85 bb       	out	0x15, r24	; 21
 204:	08 95       	ret
 206:	44 23       	and	r20, r20
 208:	69 f0       	breq	.+26     	; 0x224 <MDIO_voidSetPinValue+0xd6>
 20a:	41 30       	cpi	r20, 0x01	; 1
 20c:	b1 f4       	brne	.+44     	; 0x23a <MDIO_voidSetPinValue+0xec>
 20e:	22 b3       	in	r18, 0x12	; 18
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	02 c0       	rjmp	.+4      	; 0x21a <MDIO_voidSetPinValue+0xcc>
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <MDIO_voidSetPinValue+0xc8>
 21e:	82 2b       	or	r24, r18
 220:	82 bb       	out	0x12, r24	; 18
 222:	08 95       	ret
 224:	22 b3       	in	r18, 0x12	; 18
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	02 c0       	rjmp	.+4      	; 0x230 <MDIO_voidSetPinValue+0xe2>
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	6a 95       	dec	r22
 232:	e2 f7       	brpl	.-8      	; 0x22c <MDIO_voidSetPinValue+0xde>
 234:	80 95       	com	r24
 236:	82 23       	and	r24, r18
 238:	82 bb       	out	0x12, r24	; 18
 23a:	08 95       	ret

0000023c <MDIO_voidSetPortDirection>:


/*This function is responsible for setting a specific status [OUTPUT - INPUT_FLOAT - INPUT_PULLUP] to a specific port */
void MDIO_voidSetPortDirection(u8_t A_u8PortName , u8_t A_u8PortStatus)
{
	switch(A_u8PortName)
 23c:	81 30       	cpi	r24, 0x01	; 1
 23e:	c9 f0       	breq	.+50     	; 0x272 <MDIO_voidSetPortDirection+0x36>
 240:	28 f0       	brcs	.+10     	; 0x24c <MDIO_voidSetPortDirection+0x10>
 242:	82 30       	cpi	r24, 0x02	; 2
 244:	49 f1       	breq	.+82     	; 0x298 <MDIO_voidSetPortDirection+0x5c>
 246:	83 30       	cpi	r24, 0x03	; 3
 248:	d1 f1       	breq	.+116    	; 0x2be <MDIO_voidSetPortDirection+0x82>
 24a:	08 95       	ret
	{
		//START of set pin direction of a specific pin in PORTA
		case PORTA:
		
		switch(A_u8PortStatus)
 24c:	61 30       	cpi	r22, 0x01	; 1
 24e:	59 f0       	breq	.+22     	; 0x266 <MDIO_voidSetPortDirection+0x2a>
 250:	18 f0       	brcs	.+6      	; 0x258 <MDIO_voidSetPortDirection+0x1c>
 252:	62 30       	cpi	r22, 0x02	; 2
 254:	29 f0       	breq	.+10     	; 0x260 <MDIO_voidSetPortDirection+0x24>
 256:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRA_REG);
 258:	8a b3       	in	r24, 0x1a	; 26
 25a:	8f ef       	ldi	r24, 0xFF	; 255
 25c:	8a bb       	out	0x1a, r24	; 26
				break;
 25e:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRA_REG);
 260:	8a b3       	in	r24, 0x1a	; 26
 262:	1a ba       	out	0x1a, r1	; 26
				break;
 264:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRA_REG);
 266:	8a b3       	in	r24, 0x1a	; 26
 268:	1a ba       	out	0x1a, r1	; 26
				SET_BYTE(MDIO_PORTA_REG);
 26a:	8b b3       	in	r24, 0x1b	; 27
 26c:	8f ef       	ldi	r24, 0xFF	; 255
 26e:	8b bb       	out	0x1b, r24	; 27
				break;
 270:	08 95       	ret


		//START of set pin direction of a specific pin in PORTB
		case PORTB:
		
		switch(A_u8PortStatus)
 272:	61 30       	cpi	r22, 0x01	; 1
 274:	59 f0       	breq	.+22     	; 0x28c <MDIO_voidSetPortDirection+0x50>
 276:	18 f0       	brcs	.+6      	; 0x27e <MDIO_voidSetPortDirection+0x42>
 278:	62 30       	cpi	r22, 0x02	; 2
 27a:	29 f0       	breq	.+10     	; 0x286 <MDIO_voidSetPortDirection+0x4a>
 27c:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRB_REG);
 27e:	87 b3       	in	r24, 0x17	; 23
 280:	8f ef       	ldi	r24, 0xFF	; 255
 282:	87 bb       	out	0x17, r24	; 23
				break;
 284:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRB_REG);
 286:	87 b3       	in	r24, 0x17	; 23
 288:	17 ba       	out	0x17, r1	; 23
				break;
 28a:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRB_REG);
 28c:	87 b3       	in	r24, 0x17	; 23
 28e:	17 ba       	out	0x17, r1	; 23
				SET_BYTE(MDIO_PORTB_REG);
 290:	88 b3       	in	r24, 0x18	; 24
 292:	8f ef       	ldi	r24, 0xFF	; 255
 294:	88 bb       	out	0x18, r24	; 24
				break;
 296:	08 95       	ret
		

		//START of set pin direction of a specific pin in PORTC
		case PORTC:
		
		switch(A_u8PortStatus)
 298:	61 30       	cpi	r22, 0x01	; 1
 29a:	59 f0       	breq	.+22     	; 0x2b2 <MDIO_voidSetPortDirection+0x76>
 29c:	18 f0       	brcs	.+6      	; 0x2a4 <MDIO_voidSetPortDirection+0x68>
 29e:	62 30       	cpi	r22, 0x02	; 2
 2a0:	29 f0       	breq	.+10     	; 0x2ac <MDIO_voidSetPortDirection+0x70>
 2a2:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRC_REG);
 2a4:	84 b3       	in	r24, 0x14	; 20
 2a6:	8f ef       	ldi	r24, 0xFF	; 255
 2a8:	84 bb       	out	0x14, r24	; 20
				break;
 2aa:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRC_REG);
 2ac:	84 b3       	in	r24, 0x14	; 20
 2ae:	14 ba       	out	0x14, r1	; 20
				break;
 2b0:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRC_REG);
 2b2:	84 b3       	in	r24, 0x14	; 20
 2b4:	14 ba       	out	0x14, r1	; 20
				SET_BYTE(MDIO_PORTC_REG);
 2b6:	85 b3       	in	r24, 0x15	; 21
 2b8:	8f ef       	ldi	r24, 0xFF	; 255
 2ba:	85 bb       	out	0x15, r24	; 21
				break;
 2bc:	08 95       	ret
		
		
		//START of set pin direction of a specific pin in PORTD
		case PORTD:
		
		switch(A_u8PortStatus)
 2be:	61 30       	cpi	r22, 0x01	; 1
 2c0:	59 f0       	breq	.+22     	; 0x2d8 <MDIO_voidSetPortDirection+0x9c>
 2c2:	18 f0       	brcs	.+6      	; 0x2ca <MDIO_voidSetPortDirection+0x8e>
 2c4:	62 30       	cpi	r22, 0x02	; 2
 2c6:	29 f0       	breq	.+10     	; 0x2d2 <MDIO_voidSetPortDirection+0x96>
 2c8:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRD_REG);
 2ca:	81 b3       	in	r24, 0x11	; 17
 2cc:	8f ef       	ldi	r24, 0xFF	; 255
 2ce:	81 bb       	out	0x11, r24	; 17
				break;
 2d0:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRD_REG);
 2d2:	81 b3       	in	r24, 0x11	; 17
 2d4:	11 ba       	out	0x11, r1	; 17
				break;
 2d6:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRD_REG);
 2d8:	81 b3       	in	r24, 0x11	; 17
 2da:	11 ba       	out	0x11, r1	; 17
				SET_BYTE(MDIO_PORTD_REG);
 2dc:	82 b3       	in	r24, 0x12	; 18
 2de:	8f ef       	ldi	r24, 0xFF	; 255
 2e0:	82 bb       	out	0x12, r24	; 18
 2e2:	08 95       	ret

000002e4 <_exit>:
 2e4:	f8 94       	cli

000002e6 <__stop_program>:
 2e6:	ff cf       	rjmp	.-2      	; 0x2e6 <__stop_program>
