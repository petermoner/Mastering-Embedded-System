
Third_Task.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000244  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000298  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000093c  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b4  00000000  00000000  00000cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000078a  00000000  00000000  0000137c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  00001b08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c2  00000000  00000000  00001be0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000993  00000000  00000000  000020a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002a35  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 20 01 	jmp	0x240	; 0x240 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
 #include <util/delay.h>

 int main(void)
 {
	 u32_t i=0;
	 MDIO_voidSetPortDirection(PORTD,OUTPUT);
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	83 e0       	ldi	r24, 0x03	; 3
  70:	0e 94 cc 00 	call	0x198	; 0x198 <MDIO_voidSetPortDirection>
	 
	 while (1)
	 {
		 for (i=7;i>3;i--)
  74:	c7 e0       	ldi	r28, 0x07	; 7
  76:	d0 e0       	ldi	r29, 0x00	; 0
  78:	14 c0       	rjmp	.+40     	; 0xa2 <main+0x36>
		 {
			 MDIO_voidSetPinValue(PORTD,i,HIGH);
  7a:	41 e0       	ldi	r20, 0x01	; 1
  7c:	6c 2f       	mov	r22, r28
  7e:	83 e0       	ldi	r24, 0x03	; 3
  80:	0e 94 55 00 	call	0xaa	; 0xaa <MDIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	2f ef       	ldi	r18, 0xFF	; 255
  86:	89 e6       	ldi	r24, 0x69	; 105
  88:	98 e1       	ldi	r25, 0x18	; 24
  8a:	21 50       	subi	r18, 0x01	; 1
  8c:	80 40       	sbci	r24, 0x00	; 0
  8e:	90 40       	sbci	r25, 0x00	; 0
  90:	e1 f7       	brne	.-8      	; 0x8a <main+0x1e>
  92:	00 c0       	rjmp	.+0      	; 0x94 <main+0x28>
  94:	00 00       	nop
			 _delay_ms(1000);
			 MDIO_voidSetPinValue(PORTD,i,LOW);			 
  96:	40 e0       	ldi	r20, 0x00	; 0
  98:	6c 2f       	mov	r22, r28
  9a:	83 e0       	ldi	r24, 0x03	; 3
  9c:	0e 94 55 00 	call	0xaa	; 0xaa <MDIO_voidSetPinValue>
	 u32_t i=0;
	 MDIO_voidSetPortDirection(PORTD,OUTPUT);
	 
	 while (1)
	 {
		 for (i=7;i>3;i--)
  a0:	21 97       	sbiw	r28, 0x01	; 1
  a2:	c4 30       	cpi	r28, 0x04	; 4
  a4:	d1 05       	cpc	r29, r1
  a6:	48 f7       	brcc	.-46     	; 0x7a <main+0xe>
  a8:	e5 cf       	rjmp	.-54     	; 0x74 <main+0x8>

000000aa <MDIO_voidSetPinValue>:
			break;		
		default:
			break;
	}
	return Local_u8ReturnValue ;
}
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	19 f1       	breq	.+70     	; 0xf4 <MDIO_voidSetPinValue+0x4a>
  ae:	30 f0       	brcs	.+12     	; 0xbc <MDIO_voidSetPinValue+0x12>
  b0:	82 30       	cpi	r24, 0x02	; 2
  b2:	e1 f1       	breq	.+120    	; 0x12c <MDIO_voidSetPinValue+0x82>
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	09 f4       	brne	.+2      	; 0xba <MDIO_voidSetPinValue+0x10>
  b8:	54 c0       	rjmp	.+168    	; 0x162 <MDIO_voidSetPinValue+0xb8>
  ba:	08 95       	ret
  bc:	44 23       	and	r20, r20
  be:	71 f0       	breq	.+28     	; 0xdc <MDIO_voidSetPinValue+0x32>
  c0:	41 30       	cpi	r20, 0x01	; 1
  c2:	09 f0       	breq	.+2      	; 0xc6 <MDIO_voidSetPinValue+0x1c>
  c4:	68 c0       	rjmp	.+208    	; 0x196 <MDIO_voidSetPinValue+0xec>
  c6:	2b b3       	in	r18, 0x1b	; 27
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <MDIO_voidSetPinValue+0x28>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	6a 95       	dec	r22
  d4:	e2 f7       	brpl	.-8      	; 0xce <MDIO_voidSetPinValue+0x24>
  d6:	82 2b       	or	r24, r18
  d8:	8b bb       	out	0x1b, r24	; 27
  da:	08 95       	ret
  dc:	2b b3       	in	r18, 0x1b	; 27
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <MDIO_voidSetPinValue+0x3e>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <MDIO_voidSetPinValue+0x3a>
  ec:	80 95       	com	r24
  ee:	82 23       	and	r24, r18
  f0:	8b bb       	out	0x1b, r24	; 27
  f2:	08 95       	ret
  f4:	44 23       	and	r20, r20
  f6:	71 f0       	breq	.+28     	; 0x114 <MDIO_voidSetPinValue+0x6a>
  f8:	41 30       	cpi	r20, 0x01	; 1
  fa:	09 f0       	breq	.+2      	; 0xfe <MDIO_voidSetPinValue+0x54>
  fc:	4c c0       	rjmp	.+152    	; 0x196 <MDIO_voidSetPinValue+0xec>
  fe:	28 b3       	in	r18, 0x18	; 24
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <MDIO_voidSetPinValue+0x60>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <MDIO_voidSetPinValue+0x5c>
 10e:	82 2b       	or	r24, r18
 110:	88 bb       	out	0x18, r24	; 24
 112:	08 95       	ret
 114:	28 b3       	in	r18, 0x18	; 24
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <MDIO_voidSetPinValue+0x76>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <MDIO_voidSetPinValue+0x72>
 124:	80 95       	com	r24
 126:	82 23       	and	r24, r18
 128:	88 bb       	out	0x18, r24	; 24
 12a:	08 95       	ret
 12c:	44 23       	and	r20, r20
 12e:	69 f0       	breq	.+26     	; 0x14a <MDIO_voidSetPinValue+0xa0>
 130:	41 30       	cpi	r20, 0x01	; 1
 132:	89 f5       	brne	.+98     	; 0x196 <MDIO_voidSetPinValue+0xec>
 134:	25 b3       	in	r18, 0x15	; 21
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <MDIO_voidSetPinValue+0x96>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <MDIO_voidSetPinValue+0x92>
 144:	82 2b       	or	r24, r18
 146:	85 bb       	out	0x15, r24	; 21
 148:	08 95       	ret
 14a:	25 b3       	in	r18, 0x15	; 21
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <MDIO_voidSetPinValue+0xac>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <MDIO_voidSetPinValue+0xa8>
 15a:	80 95       	com	r24
 15c:	82 23       	and	r24, r18
 15e:	85 bb       	out	0x15, r24	; 21
 160:	08 95       	ret
 162:	44 23       	and	r20, r20
 164:	69 f0       	breq	.+26     	; 0x180 <MDIO_voidSetPinValue+0xd6>
 166:	41 30       	cpi	r20, 0x01	; 1
 168:	b1 f4       	brne	.+44     	; 0x196 <MDIO_voidSetPinValue+0xec>
 16a:	22 b3       	in	r18, 0x12	; 18
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <MDIO_voidSetPinValue+0xcc>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	6a 95       	dec	r22
 178:	e2 f7       	brpl	.-8      	; 0x172 <MDIO_voidSetPinValue+0xc8>
 17a:	82 2b       	or	r24, r18
 17c:	82 bb       	out	0x12, r24	; 18
 17e:	08 95       	ret
 180:	22 b3       	in	r18, 0x12	; 18
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	02 c0       	rjmp	.+4      	; 0x18c <MDIO_voidSetPinValue+0xe2>
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	6a 95       	dec	r22
 18e:	e2 f7       	brpl	.-8      	; 0x188 <MDIO_voidSetPinValue+0xde>
 190:	80 95       	com	r24
 192:	82 23       	and	r24, r18
 194:	82 bb       	out	0x12, r24	; 18
 196:	08 95       	ret

00000198 <MDIO_voidSetPortDirection>:


/*This function is responsible for setting a specific status [OUTPUT - INPUT_FLOAT - INPUT_PULLUP] to a specific port */
void MDIO_voidSetPortDirection(u8_t A_u8PortName , u8_t A_u8PortStatus)
{
	switch(A_u8PortName)
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	c9 f0       	breq	.+50     	; 0x1ce <MDIO_voidSetPortDirection+0x36>
 19c:	28 f0       	brcs	.+10     	; 0x1a8 <MDIO_voidSetPortDirection+0x10>
 19e:	82 30       	cpi	r24, 0x02	; 2
 1a0:	49 f1       	breq	.+82     	; 0x1f4 <MDIO_voidSetPortDirection+0x5c>
 1a2:	83 30       	cpi	r24, 0x03	; 3
 1a4:	d1 f1       	breq	.+116    	; 0x21a <MDIO_voidSetPortDirection+0x82>
 1a6:	08 95       	ret
	{
		//START of set pin direction of a specific pin in PORTA
		case PORTA:
		
		switch(A_u8PortStatus)
 1a8:	61 30       	cpi	r22, 0x01	; 1
 1aa:	59 f0       	breq	.+22     	; 0x1c2 <MDIO_voidSetPortDirection+0x2a>
 1ac:	18 f0       	brcs	.+6      	; 0x1b4 <MDIO_voidSetPortDirection+0x1c>
 1ae:	62 30       	cpi	r22, 0x02	; 2
 1b0:	29 f0       	breq	.+10     	; 0x1bc <MDIO_voidSetPortDirection+0x24>
 1b2:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRA_REG);
 1b4:	8a b3       	in	r24, 0x1a	; 26
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	8a bb       	out	0x1a, r24	; 26
				break;
 1ba:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRA_REG);
 1bc:	8a b3       	in	r24, 0x1a	; 26
 1be:	1a ba       	out	0x1a, r1	; 26
				break;
 1c0:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRA_REG);
 1c2:	8a b3       	in	r24, 0x1a	; 26
 1c4:	1a ba       	out	0x1a, r1	; 26
				SET_BYTE(MDIO_PORTA_REG);
 1c6:	8b b3       	in	r24, 0x1b	; 27
 1c8:	8f ef       	ldi	r24, 0xFF	; 255
 1ca:	8b bb       	out	0x1b, r24	; 27
				break;
 1cc:	08 95       	ret


		//START of set pin direction of a specific pin in PORTB
		case PORTB:
		
		switch(A_u8PortStatus)
 1ce:	61 30       	cpi	r22, 0x01	; 1
 1d0:	59 f0       	breq	.+22     	; 0x1e8 <MDIO_voidSetPortDirection+0x50>
 1d2:	18 f0       	brcs	.+6      	; 0x1da <MDIO_voidSetPortDirection+0x42>
 1d4:	62 30       	cpi	r22, 0x02	; 2
 1d6:	29 f0       	breq	.+10     	; 0x1e2 <MDIO_voidSetPortDirection+0x4a>
 1d8:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRB_REG);
 1da:	87 b3       	in	r24, 0x17	; 23
 1dc:	8f ef       	ldi	r24, 0xFF	; 255
 1de:	87 bb       	out	0x17, r24	; 23
				break;
 1e0:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRB_REG);
 1e2:	87 b3       	in	r24, 0x17	; 23
 1e4:	17 ba       	out	0x17, r1	; 23
				break;
 1e6:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRB_REG);
 1e8:	87 b3       	in	r24, 0x17	; 23
 1ea:	17 ba       	out	0x17, r1	; 23
				SET_BYTE(MDIO_PORTB_REG);
 1ec:	88 b3       	in	r24, 0x18	; 24
 1ee:	8f ef       	ldi	r24, 0xFF	; 255
 1f0:	88 bb       	out	0x18, r24	; 24
				break;
 1f2:	08 95       	ret
		

		//START of set pin direction of a specific pin in PORTC
		case PORTC:
		
		switch(A_u8PortStatus)
 1f4:	61 30       	cpi	r22, 0x01	; 1
 1f6:	59 f0       	breq	.+22     	; 0x20e <MDIO_voidSetPortDirection+0x76>
 1f8:	18 f0       	brcs	.+6      	; 0x200 <MDIO_voidSetPortDirection+0x68>
 1fa:	62 30       	cpi	r22, 0x02	; 2
 1fc:	29 f0       	breq	.+10     	; 0x208 <MDIO_voidSetPortDirection+0x70>
 1fe:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRC_REG);
 200:	84 b3       	in	r24, 0x14	; 20
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	84 bb       	out	0x14, r24	; 20
				break;
 206:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRC_REG);
 208:	84 b3       	in	r24, 0x14	; 20
 20a:	14 ba       	out	0x14, r1	; 20
				break;
 20c:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRC_REG);
 20e:	84 b3       	in	r24, 0x14	; 20
 210:	14 ba       	out	0x14, r1	; 20
				SET_BYTE(MDIO_PORTC_REG);
 212:	85 b3       	in	r24, 0x15	; 21
 214:	8f ef       	ldi	r24, 0xFF	; 255
 216:	85 bb       	out	0x15, r24	; 21
				break;
 218:	08 95       	ret
		
		
		//START of set pin direction of a specific pin in PORTD
		case PORTD:
		
		switch(A_u8PortStatus)
 21a:	61 30       	cpi	r22, 0x01	; 1
 21c:	59 f0       	breq	.+22     	; 0x234 <MDIO_voidSetPortDirection+0x9c>
 21e:	18 f0       	brcs	.+6      	; 0x226 <MDIO_voidSetPortDirection+0x8e>
 220:	62 30       	cpi	r22, 0x02	; 2
 222:	29 f0       	breq	.+10     	; 0x22e <MDIO_voidSetPortDirection+0x96>
 224:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRD_REG);
 226:	81 b3       	in	r24, 0x11	; 17
 228:	8f ef       	ldi	r24, 0xFF	; 255
 22a:	81 bb       	out	0x11, r24	; 17
				break;
 22c:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRD_REG);
 22e:	81 b3       	in	r24, 0x11	; 17
 230:	11 ba       	out	0x11, r1	; 17
				break;
 232:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRD_REG);
 234:	81 b3       	in	r24, 0x11	; 17
 236:	11 ba       	out	0x11, r1	; 17
				SET_BYTE(MDIO_PORTD_REG);
 238:	82 b3       	in	r24, 0x12	; 18
 23a:	8f ef       	ldi	r24, 0xFF	; 255
 23c:	82 bb       	out	0x12, r24	; 18
 23e:	08 95       	ret

00000240 <_exit>:
 240:	f8 94       	cli

00000242 <__stop_program>:
 242:	ff cf       	rjmp	.-2      	; 0x242 <__stop_program>
