
First_Task.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000262  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000975  00000000  00000000  000003ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b4  00000000  00000000  00000d21  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007b0  00000000  00000000  000013d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  00001b88  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c2  00000000  00000000  00001c60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009df  00000000  00000000  00002122  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002b01  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 2f 01 	jmp	0x25e	; 0x25e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <util/delay.h>

int main(void)
{
	u32_t i=0;
	MDIO_voidSetPortDirection(PORTA,OUTPUT);
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	80 e0       	ldi	r24, 0x00	; 0
  70:	0e 94 db 00 	call	0x1b6	; 0x1b6 <MDIO_voidSetPortDirection>

    while (1) 
    {
		
		for (i=0;i<8;i++)
  74:	c0 e0       	ldi	r28, 0x00	; 0
  76:	d0 e0       	ldi	r29, 0x00	; 0
  78:	0f c0       	rjmp	.+30     	; 0x98 <main+0x2c>
		{
			MDIO_voidSetPinValue(PORTA,i,HIGH);
  7a:	41 e0       	ldi	r20, 0x01	; 1
  7c:	6c 2f       	mov	r22, r28
  7e:	80 e0       	ldi	r24, 0x00	; 0
  80:	0e 94 64 00 	call	0xc8	; 0xc8 <MDIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	2f ef       	ldi	r18, 0xFF	; 255
  86:	80 e7       	ldi	r24, 0x70	; 112
  88:	92 e0       	ldi	r25, 0x02	; 2
  8a:	21 50       	subi	r18, 0x01	; 1
  8c:	80 40       	sbci	r24, 0x00	; 0
  8e:	90 40       	sbci	r25, 0x00	; 0
  90:	e1 f7       	brne	.-8      	; 0x8a <main+0x1e>
  92:	00 c0       	rjmp	.+0      	; 0x94 <main+0x28>
  94:	00 00       	nop
	MDIO_voidSetPortDirection(PORTA,OUTPUT);

    while (1) 
    {
		
		for (i=0;i<8;i++)
  96:	21 96       	adiw	r28, 0x01	; 1
  98:	c8 30       	cpi	r28, 0x08	; 8
  9a:	d1 05       	cpc	r29, r1
  9c:	70 f3       	brcs	.-36     	; 0x7a <main+0xe>
  9e:	c8 e0       	ldi	r28, 0x08	; 8
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	0f c0       	rjmp	.+30     	; 0xc2 <main+0x56>
			_delay_ms(100);
		}
		
		for (i=8;i>0;i--)
		{
			MDIO_voidSetPinValue(PORTA,i,LOW);
  a4:	40 e0       	ldi	r20, 0x00	; 0
  a6:	6c 2f       	mov	r22, r28
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	0e 94 64 00 	call	0xc8	; 0xc8 <MDIO_voidSetPinValue>
  ae:	2f ef       	ldi	r18, 0xFF	; 255
  b0:	80 e7       	ldi	r24, 0x70	; 112
  b2:	92 e0       	ldi	r25, 0x02	; 2
  b4:	21 50       	subi	r18, 0x01	; 1
  b6:	80 40       	sbci	r24, 0x00	; 0
  b8:	90 40       	sbci	r25, 0x00	; 0
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x48>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x52>
  be:	00 00       	nop
		{
			MDIO_voidSetPinValue(PORTA,i,HIGH);
			_delay_ms(100);
		}
		
		for (i=8;i>0;i--)
  c0:	21 97       	sbiw	r28, 0x01	; 1
  c2:	20 97       	sbiw	r28, 0x00	; 0
  c4:	79 f7       	brne	.-34     	; 0xa4 <main+0x38>
  c6:	d6 cf       	rjmp	.-84     	; 0x74 <main+0x8>

000000c8 <MDIO_voidSetPinValue>:
			break;		
		default:
			break;
	}
	return Local_u8ReturnValue ;
}
  c8:	81 30       	cpi	r24, 0x01	; 1
  ca:	19 f1       	breq	.+70     	; 0x112 <MDIO_voidSetPinValue+0x4a>
  cc:	30 f0       	brcs	.+12     	; 0xda <MDIO_voidSetPinValue+0x12>
  ce:	82 30       	cpi	r24, 0x02	; 2
  d0:	e1 f1       	breq	.+120    	; 0x14a <MDIO_voidSetPinValue+0x82>
  d2:	83 30       	cpi	r24, 0x03	; 3
  d4:	09 f4       	brne	.+2      	; 0xd8 <MDIO_voidSetPinValue+0x10>
  d6:	54 c0       	rjmp	.+168    	; 0x180 <MDIO_voidSetPinValue+0xb8>
  d8:	08 95       	ret
  da:	44 23       	and	r20, r20
  dc:	71 f0       	breq	.+28     	; 0xfa <MDIO_voidSetPinValue+0x32>
  de:	41 30       	cpi	r20, 0x01	; 1
  e0:	09 f0       	breq	.+2      	; 0xe4 <MDIO_voidSetPinValue+0x1c>
  e2:	68 c0       	rjmp	.+208    	; 0x1b4 <MDIO_voidSetPinValue+0xec>
  e4:	2b b3       	in	r18, 0x1b	; 27
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <MDIO_voidSetPinValue+0x28>
  ec:	88 0f       	add	r24, r24
  ee:	99 1f       	adc	r25, r25
  f0:	6a 95       	dec	r22
  f2:	e2 f7       	brpl	.-8      	; 0xec <MDIO_voidSetPinValue+0x24>
  f4:	82 2b       	or	r24, r18
  f6:	8b bb       	out	0x1b, r24	; 27
  f8:	08 95       	ret
  fa:	2b b3       	in	r18, 0x1b	; 27
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	02 c0       	rjmp	.+4      	; 0x106 <MDIO_voidSetPinValue+0x3e>
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	6a 95       	dec	r22
 108:	e2 f7       	brpl	.-8      	; 0x102 <MDIO_voidSetPinValue+0x3a>
 10a:	80 95       	com	r24
 10c:	82 23       	and	r24, r18
 10e:	8b bb       	out	0x1b, r24	; 27
 110:	08 95       	ret
 112:	44 23       	and	r20, r20
 114:	71 f0       	breq	.+28     	; 0x132 <MDIO_voidSetPinValue+0x6a>
 116:	41 30       	cpi	r20, 0x01	; 1
 118:	09 f0       	breq	.+2      	; 0x11c <MDIO_voidSetPinValue+0x54>
 11a:	4c c0       	rjmp	.+152    	; 0x1b4 <MDIO_voidSetPinValue+0xec>
 11c:	28 b3       	in	r18, 0x18	; 24
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <MDIO_voidSetPinValue+0x60>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <MDIO_voidSetPinValue+0x5c>
 12c:	82 2b       	or	r24, r18
 12e:	88 bb       	out	0x18, r24	; 24
 130:	08 95       	ret
 132:	28 b3       	in	r18, 0x18	; 24
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <MDIO_voidSetPinValue+0x76>
 13a:	88 0f       	add	r24, r24
 13c:	99 1f       	adc	r25, r25
 13e:	6a 95       	dec	r22
 140:	e2 f7       	brpl	.-8      	; 0x13a <MDIO_voidSetPinValue+0x72>
 142:	80 95       	com	r24
 144:	82 23       	and	r24, r18
 146:	88 bb       	out	0x18, r24	; 24
 148:	08 95       	ret
 14a:	44 23       	and	r20, r20
 14c:	69 f0       	breq	.+26     	; 0x168 <MDIO_voidSetPinValue+0xa0>
 14e:	41 30       	cpi	r20, 0x01	; 1
 150:	89 f5       	brne	.+98     	; 0x1b4 <MDIO_voidSetPinValue+0xec>
 152:	25 b3       	in	r18, 0x15	; 21
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	02 c0       	rjmp	.+4      	; 0x15e <MDIO_voidSetPinValue+0x96>
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	6a 95       	dec	r22
 160:	e2 f7       	brpl	.-8      	; 0x15a <MDIO_voidSetPinValue+0x92>
 162:	82 2b       	or	r24, r18
 164:	85 bb       	out	0x15, r24	; 21
 166:	08 95       	ret
 168:	25 b3       	in	r18, 0x15	; 21
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <MDIO_voidSetPinValue+0xac>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	6a 95       	dec	r22
 176:	e2 f7       	brpl	.-8      	; 0x170 <MDIO_voidSetPinValue+0xa8>
 178:	80 95       	com	r24
 17a:	82 23       	and	r24, r18
 17c:	85 bb       	out	0x15, r24	; 21
 17e:	08 95       	ret
 180:	44 23       	and	r20, r20
 182:	69 f0       	breq	.+26     	; 0x19e <MDIO_voidSetPinValue+0xd6>
 184:	41 30       	cpi	r20, 0x01	; 1
 186:	b1 f4       	brne	.+44     	; 0x1b4 <MDIO_voidSetPinValue+0xec>
 188:	22 b3       	in	r18, 0x12	; 18
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 c0       	rjmp	.+4      	; 0x194 <MDIO_voidSetPinValue+0xcc>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	6a 95       	dec	r22
 196:	e2 f7       	brpl	.-8      	; 0x190 <MDIO_voidSetPinValue+0xc8>
 198:	82 2b       	or	r24, r18
 19a:	82 bb       	out	0x12, r24	; 18
 19c:	08 95       	ret
 19e:	22 b3       	in	r18, 0x12	; 18
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <MDIO_voidSetPinValue+0xe2>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <MDIO_voidSetPinValue+0xde>
 1ae:	80 95       	com	r24
 1b0:	82 23       	and	r24, r18
 1b2:	82 bb       	out	0x12, r24	; 18
 1b4:	08 95       	ret

000001b6 <MDIO_voidSetPortDirection>:


/*This function is responsible for setting a specific status [OUTPUT - INPUT_FLOAT - INPUT_PULLUP] to a specific port */
void MDIO_voidSetPortDirection(u8_t A_u8PortName , u8_t A_u8PortStatus)
{
	switch(A_u8PortName)
 1b6:	81 30       	cpi	r24, 0x01	; 1
 1b8:	c9 f0       	breq	.+50     	; 0x1ec <MDIO_voidSetPortDirection+0x36>
 1ba:	28 f0       	brcs	.+10     	; 0x1c6 <MDIO_voidSetPortDirection+0x10>
 1bc:	82 30       	cpi	r24, 0x02	; 2
 1be:	49 f1       	breq	.+82     	; 0x212 <MDIO_voidSetPortDirection+0x5c>
 1c0:	83 30       	cpi	r24, 0x03	; 3
 1c2:	d1 f1       	breq	.+116    	; 0x238 <MDIO_voidSetPortDirection+0x82>
 1c4:	08 95       	ret
	{
		//START of set pin direction of a specific pin in PORTA
		case PORTA:
		
		switch(A_u8PortStatus)
 1c6:	61 30       	cpi	r22, 0x01	; 1
 1c8:	59 f0       	breq	.+22     	; 0x1e0 <MDIO_voidSetPortDirection+0x2a>
 1ca:	18 f0       	brcs	.+6      	; 0x1d2 <MDIO_voidSetPortDirection+0x1c>
 1cc:	62 30       	cpi	r22, 0x02	; 2
 1ce:	29 f0       	breq	.+10     	; 0x1da <MDIO_voidSetPortDirection+0x24>
 1d0:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRA_REG);
 1d2:	8a b3       	in	r24, 0x1a	; 26
 1d4:	8f ef       	ldi	r24, 0xFF	; 255
 1d6:	8a bb       	out	0x1a, r24	; 26
				break;
 1d8:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRA_REG);
 1da:	8a b3       	in	r24, 0x1a	; 26
 1dc:	1a ba       	out	0x1a, r1	; 26
				break;
 1de:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRA_REG);
 1e0:	8a b3       	in	r24, 0x1a	; 26
 1e2:	1a ba       	out	0x1a, r1	; 26
				SET_BYTE(MDIO_PORTA_REG);
 1e4:	8b b3       	in	r24, 0x1b	; 27
 1e6:	8f ef       	ldi	r24, 0xFF	; 255
 1e8:	8b bb       	out	0x1b, r24	; 27
				break;
 1ea:	08 95       	ret


		//START of set pin direction of a specific pin in PORTB
		case PORTB:
		
		switch(A_u8PortStatus)
 1ec:	61 30       	cpi	r22, 0x01	; 1
 1ee:	59 f0       	breq	.+22     	; 0x206 <MDIO_voidSetPortDirection+0x50>
 1f0:	18 f0       	brcs	.+6      	; 0x1f8 <MDIO_voidSetPortDirection+0x42>
 1f2:	62 30       	cpi	r22, 0x02	; 2
 1f4:	29 f0       	breq	.+10     	; 0x200 <MDIO_voidSetPortDirection+0x4a>
 1f6:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRB_REG);
 1f8:	87 b3       	in	r24, 0x17	; 23
 1fa:	8f ef       	ldi	r24, 0xFF	; 255
 1fc:	87 bb       	out	0x17, r24	; 23
				break;
 1fe:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRB_REG);
 200:	87 b3       	in	r24, 0x17	; 23
 202:	17 ba       	out	0x17, r1	; 23
				break;
 204:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRB_REG);
 206:	87 b3       	in	r24, 0x17	; 23
 208:	17 ba       	out	0x17, r1	; 23
				SET_BYTE(MDIO_PORTB_REG);
 20a:	88 b3       	in	r24, 0x18	; 24
 20c:	8f ef       	ldi	r24, 0xFF	; 255
 20e:	88 bb       	out	0x18, r24	; 24
				break;
 210:	08 95       	ret
		

		//START of set pin direction of a specific pin in PORTC
		case PORTC:
		
		switch(A_u8PortStatus)
 212:	61 30       	cpi	r22, 0x01	; 1
 214:	59 f0       	breq	.+22     	; 0x22c <MDIO_voidSetPortDirection+0x76>
 216:	18 f0       	brcs	.+6      	; 0x21e <MDIO_voidSetPortDirection+0x68>
 218:	62 30       	cpi	r22, 0x02	; 2
 21a:	29 f0       	breq	.+10     	; 0x226 <MDIO_voidSetPortDirection+0x70>
 21c:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRC_REG);
 21e:	84 b3       	in	r24, 0x14	; 20
 220:	8f ef       	ldi	r24, 0xFF	; 255
 222:	84 bb       	out	0x14, r24	; 20
				break;
 224:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRC_REG);
 226:	84 b3       	in	r24, 0x14	; 20
 228:	14 ba       	out	0x14, r1	; 20
				break;
 22a:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRC_REG);
 22c:	84 b3       	in	r24, 0x14	; 20
 22e:	14 ba       	out	0x14, r1	; 20
				SET_BYTE(MDIO_PORTC_REG);
 230:	85 b3       	in	r24, 0x15	; 21
 232:	8f ef       	ldi	r24, 0xFF	; 255
 234:	85 bb       	out	0x15, r24	; 21
				break;
 236:	08 95       	ret
		
		
		//START of set pin direction of a specific pin in PORTD
		case PORTD:
		
		switch(A_u8PortStatus)
 238:	61 30       	cpi	r22, 0x01	; 1
 23a:	59 f0       	breq	.+22     	; 0x252 <MDIO_voidSetPortDirection+0x9c>
 23c:	18 f0       	brcs	.+6      	; 0x244 <MDIO_voidSetPortDirection+0x8e>
 23e:	62 30       	cpi	r22, 0x02	; 2
 240:	29 f0       	breq	.+10     	; 0x24c <MDIO_voidSetPortDirection+0x96>
 242:	08 95       	ret
		{
			case OUTPUT:
				SET_BYTE(MDIO_DDRD_REG);
 244:	81 b3       	in	r24, 0x11	; 17
 246:	8f ef       	ldi	r24, 0xFF	; 255
 248:	81 bb       	out	0x11, r24	; 17
				break;
 24a:	08 95       	ret
			case INPUT_FLOAT:
				CLEAR_BYTE(MDIO_DDRD_REG);
 24c:	81 b3       	in	r24, 0x11	; 17
 24e:	11 ba       	out	0x11, r1	; 17
				break;
 250:	08 95       	ret
			case INPUT_PULLUP:
				CLEAR_BYTE(MDIO_DDRD_REG);
 252:	81 b3       	in	r24, 0x11	; 17
 254:	11 ba       	out	0x11, r1	; 17
				SET_BYTE(MDIO_PORTD_REG);
 256:	82 b3       	in	r24, 0x12	; 18
 258:	8f ef       	ldi	r24, 0xFF	; 255
 25a:	82 bb       	out	0x12, r24	; 18
 25c:	08 95       	ret

0000025e <_exit>:
 25e:	f8 94       	cli

00000260 <__stop_program>:
 260:	ff cf       	rjmp	.-2      	; 0x260 <__stop_program>
